{"ast":null,"code":"import _classCallCheck from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jubaan/Documents/online-form-builder/components/multiple-options/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Checkbox from './checkbox';\nimport styles from './multiple-options.module.scss';\nvar checkboxes = [{\n  key: 1,\n  name: 'grupo'\n}, {\n  key: 2,\n  name: 'grupo'\n}, {\n  key: 2,\n  name: 'grupo'\n}, {\n  key: 3,\n  name: 'grupo'\n}];\n\nvar MultipleOptions = /*#__PURE__*/function (_Component) {\n  _inherits(MultipleOptions, _Component);\n\n  var _super = _createSuper(MultipleOptions);\n\n  function MultipleOptions(props) {\n    var _this;\n\n    _classCallCheck(this, MultipleOptions);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      checkedItems: new Map()\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MultipleOptions, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var item = e.target.name;\n      var isChecked = e.target.checked;\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.checkedItems.set(item, isChecked)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return checkboxes.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [item.name, /*#__PURE__*/_jsxDEV(Checkbox, {\n            name: item.name,\n            checked: _this2.state.checkedItems.get(item.name),\n            onChange: _this2.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, _this2)]\n        }, item.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, _this2);\n      });\n    }\n  }]);\n\n  return MultipleOptions;\n}(Component);\n\nexport { MultipleOptions as default };","map":{"version":3,"sources":["/home/jubaan/Documents/online-form-builder/components/multiple-options/index.js"],"names":["React","Component","Checkbox","styles","checkboxes","key","name","MultipleOptions","props","state","checkedItems","Map","handleChange","bind","e","item","target","isChecked","checked","setState","prevState","set","map","get"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,IAAIC,UAAU,GAAG,CACf;AACEC,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADe,EAKf;AACED,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALe,EASf;AACED,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATe,EAYb;AACAD,EAAAA,GAAG,EAAE,CADL;AAEAC,EAAAA,IAAI,EAAE;AAFN,CAZa,CAAjB;;IAkBqBC,e;;;;;AACnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,IAAIC,GAAJ;AADH,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAPiB;AAQlB;;;;iCAEYC,C,EAAG;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASV,IAAtB;AACA,UAAMW,SAAS,GAAGH,CAAC,CAACE,MAAF,CAASE,OAA3B;AACA,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEV,UAAAA,YAAY,EAAEU,SAAS,CAACV,YAAV,CAAuBW,GAAvB,CAA2BN,IAA3B,EAAiCE,SAAjC;AAAhB,SAAL;AAAA,OAAvB;AACD;;;6BAEQ;AAAA;;AACP,aACEb,UAAU,CAACkB,GAAX,CAAe,UAAAP,IAAI;AAAA,4BACjB;AAAA,qBACGA,IAAI,CAACT,IADR,eAEE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAES,IAAI,CAACT,IAArB;AAA2B,YAAA,OAAO,EAAE,MAAI,CAACG,KAAL,CAAWC,YAAX,CAAwBa,GAAxB,CAA4BR,IAAI,CAACT,IAAjC,CAApC;AAA4E,YAAA,QAAQ,EAAE,MAAI,CAACM;AAA3F;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,WAAYG,IAAI,CAACV,GAAjB;AAAA;AAAA;AAAA;AAAA,kBADiB;AAAA,OAAnB,CADF;AAQD;;;;EA1B0CJ,S;;SAAxBM,e","sourcesContent":["import React, { Component } from 'react';\nimport Checkbox from './checkbox'\nimport styles from './multiple-options.module.scss';\n\nlet checkboxes = [\n  {\n    key: 1,\n    name: 'grupo'\n  },\n  {\n    key: 2,\n    name: 'grupo'\n  },\n  {\n    key: 2,\n    name: 'grupo'\n  },{\n    key: 3,\n    name: 'grupo'\n  }\n]\n\nexport default class MultipleOptions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedItems: new Map(),\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n  }\n\n  render() {\n    return (\n      checkboxes.map(item => (\n        <label key={item.key}>\n          {item.name}\n          <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\n        </label>\n      ))\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}