{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jubaan/Documents/online-form-builder/components/MapViewer/MapViewer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { useState } from 'react';\nimport style from './MapViewer.module.scss';\nimport CityPin from './CityPin';\nconst apiPublicToken = 'pk.eyJ1IjoibWFudWVscm9kZ3p6IiwiYSI6ImNraWhsYXQxOTA0ZHcyeG16cm5nYzg1OTkifQ.80CCl2mOytRN7ORSO9Ew9Q';\n/**onPointAdded event is dispatched when user adds a point in the map by clicking on it.\n *  This event returns a point object which contains latitude and longitude properties\n */\n\nconst MapViewer = ({\n  onPointAdded\n}) => {\n  const {\n    0: pin,\n    1: setPin\n  } = useState();\n  const {\n    0: viewport,\n    1: setViewPort\n  } = useState({\n    latitude: 25.687071,\n    longitude: -100.322584,\n    zoom: 10,\n    width: '100%',\n    height: '100%'\n  });\n\n  const addPoint = ({\n    lngLat: [longitude, latitude]\n  }) => {\n    setPin({\n      longitude,\n      latitude\n    });\n    onPointAdded({\n      longitude,\n      latitude\n    });\n  };\n\n  const removeMarker = () => setPin(undefined);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.mapContainer,\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, _objectSpread(_objectSpread({}, viewport), {}, {\n      onClick: addPoint,\n      mapboxApiAccessToken: apiPublicToken,\n      onViewportChange: viewport => setViewPort(viewport),\n      children: pin ? /*#__PURE__*/_jsxDEV(Marker, _objectSpread(_objectSpread({}, pin), {}, {\n        captureClick: true,\n        children: /*#__PURE__*/_jsxDEV(CityPin, {\n          onClick: removeMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 61\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this) : ''\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nexport default MapViewer;","map":{"version":3,"sources":["/home/jubaan/Documents/online-form-builder/components/MapViewer/MapViewer.js"],"names":["ReactMapGL","Marker","useState","style","CityPin","apiPublicToken","MapViewer","onPointAdded","pin","setPin","viewport","setViewPort","latitude","longitude","zoom","width","height","addPoint","lngLat","removeMarker","undefined","mapContainer"],"mappings":";;;;;;;;;AAAA,OAAOA,UAAP,IAAoBC,MAApB,QAAiC,cAAjC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,cAAc,GAAG,kGAAvB;AAEA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAElC,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBP,QAAQ,EAA9B;AAEA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC;AACrCU,IAAAA,QAAQ,EAAC,SAD4B;AAErCC,IAAAA,SAAS,EAAE,CAAC,UAFyB;AAGrCC,IAAAA,IAAI,EAAE,EAH+B;AAIrCC,IAAAA,KAAK,EAAE,MAJ8B;AAKrCC,IAAAA,MAAM,EAAE;AAL6B,GAAD,CAAxC;;AAQA,QAAMC,QAAQ,GAAG,CAAC;AAACC,IAAAA,MAAM,EAAE,CAACL,SAAD,EAAYD,QAAZ;AAAT,GAAD,KAAqC;AAClDH,IAAAA,MAAM,CAAC;AAACI,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,KAAD,CAAN;AACAL,IAAAA,YAAY,CAAC;AAACM,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMO,YAAY,GAAG,MAAMV,MAAM,CAACW,SAAD,CAAjC;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEjB,KAAK,CAACkB,YAAtB;AAAA,2BACI,QAAC,UAAD,kCACIX,QADJ;AAEA,MAAA,OAAO,EAAEO,QAFT;AAGA,MAAA,oBAAoB,EAAEZ,cAHtB;AAIA,MAAA,gBAAgB,EAAGK,QAAD,IAAcC,WAAW,CAACD,QAAD,CAJ3C;AAAA,gBAMKF,GAAG,gBAAG,QAAC,MAAD,kCAAYA,GAAZ;AAAiB,QAAA,YAAY,EAAE,IAA/B;AAAA,+BAAqC,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEW;AAAlB;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,cAAH,GAAqF;AAN7F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/BD;;AAiCA,eAAeb,SAAf","sourcesContent":["import ReactMapGL, {Marker} from 'react-map-gl'\nimport {useState} from 'react'\nimport style from './MapViewer.module.scss'\nimport CityPin from './CityPin'\n\nconst apiPublicToken = 'pk.eyJ1IjoibWFudWVscm9kZ3p6IiwiYSI6ImNraWhsYXQxOTA0ZHcyeG16cm5nYzg1OTkifQ.80CCl2mOytRN7ORSO9Ew9Q'\n\n/**onPointAdded event is dispatched when user adds a point in the map by clicking on it.\n *  This event returns a point object which contains latitude and longitude properties\n */\nconst MapViewer = ({onPointAdded}) => {\n\n    const [pin, setPin] = useState()\n\n    const [viewport, setViewPort] = useState({\n        latitude:25.687071,\n        longitude: -100.322584,\n        zoom: 10,\n        width: '100%',\n        height: '100%'\n    })\n\n    const addPoint = ({lngLat: [longitude, latitude]}) => {\n        setPin({longitude, latitude})\n        onPointAdded({longitude, latitude})\n    }\n    \n    const removeMarker = () => setPin(undefined)\n\n    return(\n        <div className={style.mapContainer}>\n            <ReactMapGL \n            {...viewport} \n            onClick={addPoint}\n            mapboxApiAccessToken={apiPublicToken} \n            onViewportChange={(viewport) => setViewPort(viewport)}\n            >\n                {pin ? <Marker {...pin} captureClick={true}><CityPin onClick={removeMarker}/></Marker> : ''}\n            </ReactMapGL>\n        </div>\n    )\n}\n\nexport default MapViewer"]},"metadata":{},"sourceType":"module"}