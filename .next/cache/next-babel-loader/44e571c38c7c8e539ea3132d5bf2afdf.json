{"ast":null,"code":"import _defineProperty from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jubaan/Documents/online-form-builder/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/globals.css';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var allInputs = {\n    imgUrl: ''\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageAsFile = _useState2[0],\n      setImageAsFile = _useState2[1];\n\n  var _useState3 = useState(allImputs),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageAsUrl = _useState4[0],\n      setImageAsUrl = _useState4[1];\n\n  console.log(imageAsFile);\n\n  var handleImageAsFile = function handleImageAsFile(e) {\n    var image = e.target.files[0];\n    setImageAsFile(function (imageFile) {\n      return image;\n    });\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"input\", {\n    type: \"file\",\n    onChange: handleImageAsFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MyApp, \"LjehDPuaBXaeUF5+nmVLPLgtkyQ=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/jubaan/Documents/online-form-builder/pages/_app.js"],"names":["firebase","MyApp","Component","pageProps","allInputs","imgUrl","useState","imageAsFile","setImageAsFile","allImputs","imageAsUrl","setImageAsUrl","console","log","handleImageAsFile","e","image","target","files","imageFile"],"mappings":";;;;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,MAAMC,SAAS,GAAG;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAlB;;AADuC,kBAEDC,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,MAEhCC,WAFgC;AAAA,MAEnBC,cAFmB;;AAAA,mBAGHF,QAAQ,CAACG,SAAD,CAHL;AAAA;AAAA,MAGhCC,UAHgC;AAAA,MAGpBC,aAHoB;;AAIvCC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;;AACA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/B,QAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAV,IAAAA,cAAc,CAAC,UAAAW,SAAS;AAAA,aAAKH,KAAL;AAAA,KAAV,CAAd;AACD,GAHD;;AAIA;AAAA;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEF;AAFZ;AAAA;AAAA;AAAA;AAAA;;AAIA,sBAAO,QAAC,SAAD,oBAAeX,SAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAdQF,K;;KAAAA,K;AAgBT,eAAeA,KAAf","sourcesContent":["import '../styles/globals.css'\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\n\nfunction MyApp({ Component, pageProps }) {\n  const allInputs = {imgUrl: ''}\n  const [imageAsFile, setImageAsFile] = useState('')\n  const [imageAsUrl, setImageAsUrl] = useState(allImputs)\n  console.log(imageAsFile)\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0]\n    setImageAsFile(imageFile => (image))\n  }\n  <input\n    type=\"file\"\n    onChange={handleImageAsFile}\n  />\n  return <Component {...pageProps} />\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}