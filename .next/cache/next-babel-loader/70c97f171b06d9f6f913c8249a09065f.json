{"ast":null,"code":"import { useState } from \"react\";\nimport { storageRef } from \"../../firebaseConfig\";\nvar files = [];\ndocument.getElementById(\"files\").addEventListener(\"change\", function (e) {\n  files = e.target.files;\n\n  for (let i = 0; i < files.length; i++) {\n    console.log(files[i]);\n  }\n});\ndocument.getElementById(\"send\").addEventListener(\"click\", function () {\n  //checks if files are selected\n  if (files.length != 0) {\n    //Loops through all the selected files\n    for (let i = 0; i < files.length; i++) {\n      //create a storage reference\n      var storage = firebase.storage().ref(files[i].name); //upload file\n\n      var upload = storage.put(files[i]); //update progress bar\n\n      upload.on(\"state_changed\", function progress(snapshot) {\n        var percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        document.getElementById(\"progress\").value = percentage;\n      }, function error() {\n        alert(\"error uploading file\");\n      }, function complete() {\n        document.getElementById(\"uploading\").innerHTML += `${files[i].name} upoaded <br />`;\n      });\n    }\n  } else {\n    alert(\"No file chosen\");\n  }\n});\n\nfunction getFileUrl(filename) {\n  //create a storage reference\n  var storage = firebase.storage().ref(filename); //get file url\n\n  storage.getDownloadURL().then(function (url) {\n    console.log(url);\n  }).catch(function (error) {\n    console.log(\"error encountered\");\n  });\n}","map":{"version":3,"sources":["/home/jubaan/Documents/online-form-builder/components/fileUploader/index.js"],"names":["useState","storageRef","files","document","getElementById","addEventListener","e","target","i","length","console","log","storage","firebase","ref","name","upload","put","on","progress","snapshot","percentage","bytesTransferred","totalBytes","value","error","alert","complete","innerHTML","getFileUrl","filename","getDownloadURL","then","url","catch"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,IAAIC,KAAK,GAAG,EAAZ;AACAC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,gBAAjC,CAAkD,QAAlD,EAA4D,UAASC,CAAT,EAAY;AACtEJ,EAAAA,KAAK,GAAGI,CAAC,CAACC,MAAF,CAASL,KAAjB;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCE,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACM,CAAD,CAAjB;AACD;AACF,CALD;AAOAL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,gBAAhC,CAAiD,OAAjD,EAA0D,YAAW;AACnE;AACA,MAAIH,KAAK,CAACO,MAAN,IAAgB,CAApB,EAAuB;AACrB;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AACA,UAAII,OAAO,GAAGC,QAAQ,CAACD,OAAT,GAAmBE,GAAnB,CAAuBZ,KAAK,CAACM,CAAD,CAAL,CAASO,IAAhC,CAAd,CAFqC,CAIrC;;AACA,UAAIC,MAAM,GAAGJ,OAAO,CAACK,GAAR,CAAYf,KAAK,CAACM,CAAD,CAAjB,CAAb,CALqC,CAOrC;;AACAQ,MAAAA,MAAM,CAACE,EAAP,CACE,eADF,EAEE,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,YAAIC,UAAU,GACXD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADtD;AAEApB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCoB,KAApC,GAA4CH,UAA5C;AACD,OANH,EAQE,SAASI,KAAT,GAAiB;AACfC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,OAVH,EAYE,SAASC,QAAT,GAAoB;AAClBxB,QAAAA,QAAQ,CAACC,cAAT,CACE,WADF,EAEEwB,SAFF,IAEgB,GAAE1B,KAAK,CAACM,CAAD,CAAL,CAASO,IAAK,iBAFhC;AAGD,OAhBH;AAkBD;AACF,GA7BD,MA6BO;AACLW,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,CAlCD;;AAoCA,SAASG,UAAT,CAAoBC,QAApB,EAA8B;AAC5B;AACA,MAAIlB,OAAO,GAAGC,QAAQ,CAACD,OAAT,GAAmBE,GAAnB,CAAuBgB,QAAvB,CAAd,CAF4B,CAI5B;;AACAlB,EAAAA,OAAO,CACJmB,cADH,GAEGC,IAFH,CAEQ,UAASC,GAAT,EAAc;AAClBvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ;AACD,GAJH,EAKGC,KALH,CAKS,UAAST,KAAT,EAAgB;AACrBf,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAPH;AAQD","sourcesContent":["import { useState } from \"react\";\nimport { storageRef } from \"../../firebaseConfig\";\n\nvar files = [];\ndocument.getElementById(\"files\").addEventListener(\"change\", function(e) {\n  files = e.target.files;\n  for (let i = 0; i < files.length; i++) {\n    console.log(files[i]);\n  }\n});\n\ndocument.getElementById(\"send\").addEventListener(\"click\", function() {\n  //checks if files are selected\n  if (files.length != 0) {\n    //Loops through all the selected files\n    for (let i = 0; i < files.length; i++) {\n      //create a storage reference\n      var storage = firebase.storage().ref(files[i].name);\n\n      //upload file\n      var upload = storage.put(files[i]);\n\n      //update progress bar\n      upload.on(\n        \"state_changed\",\n        function progress(snapshot) {\n          var percentage =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          document.getElementById(\"progress\").value = percentage;\n        },\n\n        function error() {\n          alert(\"error uploading file\");\n        },\n\n        function complete() {\n          document.getElementById(\n            \"uploading\"\n          ).innerHTML += `${files[i].name} upoaded <br />`;\n        }\n      );\n    }\n  } else {\n    alert(\"No file chosen\");\n  }\n});\n\nfunction getFileUrl(filename) {\n  //create a storage reference\n  var storage = firebase.storage().ref(filename);\n\n  //get file url\n  storage\n    .getDownloadURL()\n    .then(function(url) {\n      console.log(url);\n    })\n    .catch(function(error) {\n      console.log(\"error encountered\");\n    });\n}\n"]},"metadata":{},"sourceType":"module"}