{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { auth, firestore } from '../firebaseConfig';\n\nconst addUserToCollection = async result => {\n  let oDocument = {};\n\n  try {\n    const document = await firestore.collection('users').doc(result.user.uid).set({\n      email: result.user.email\n    });\n    oDocument.ok = true;\n    oDocument.data = document;\n  } catch (err) {\n    oDocument.ok = false;\n    oDocument.error = err;\n  }\n\n  return oDocument;\n};\n\nexport const firebaseLogin = async (email, password) => {\n  let result;\n\n  try {\n    result = await auth.signInWithEmailAndPassword(email, password);\n  } catch (err) {\n    console.log(err);\n  }\n\n  if (result) return result.user;else return null;\n};\nexport const firebaseSignUp = async (email, password) => {\n  let result;\n\n  try {\n    result = await auth.createUserWithEmailAndPassword(email, password);\n    const oDocument = await addUserToCollection(result); //if there's a problem saving user in users collection, then it is deleted\n\n    if (!oDocument.ok) {\n      await auth.currentUser.delete();\n      throw _objectSpread({}, oDocument.error);\n    }\n  } catch (err) {\n    result = err;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/jubaan/Documents/online-form-builder/helpers/user.js"],"names":["auth","firestore","addUserToCollection","result","oDocument","document","collection","doc","user","uid","set","email","ok","data","err","error","firebaseLogin","password","signInWithEmailAndPassword","console","log","firebaseSignUp","createUserWithEmailAndPassword","currentUser","delete"],"mappings":";;;;;;AAAA,SAAQA,IAAR,EAAcC,SAAd,QAA8B,mBAA9B;;AAEA,MAAMC,mBAAmB,GAAG,MAAMC,MAAN,IAAiB;AAEzC,MAAIC,SAAS,GAAG,EAAhB;;AAIA,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCJ,MAAM,CAACK,IAAP,CAAYC,GAA9C,EAAmDC,GAAnD,CAAuD;AAC1EC,MAAAA,KAAK,EAAER,MAAM,CAACK,IAAP,CAAYG;AADuD,KAAvD,CAAvB;AAIAP,IAAAA,SAAS,CAACQ,EAAV,GAAe,IAAf;AACAR,IAAAA,SAAS,CAACS,IAAV,GAAiBR,QAAjB;AACH,GAPD,CAQA,OAAMS,GAAN,EAAU;AACNV,IAAAA,SAAS,CAACQ,EAAV,GAAe,KAAf;AACAR,IAAAA,SAAS,CAACW,KAAV,GAAkBD,GAAlB;AACH;;AAED,SAAOV,SAAP;AACH,CApBD;;AAsBA,OAAO,MAAMY,aAAa,GAAG,OAAML,KAAN,EAAaM,QAAb,KAA0B;AACnD,MAAId,MAAJ;;AAEA,MAAG;AACCA,IAAAA,MAAM,GAAG,MAAMH,IAAI,CAACkB,0BAAL,CAAgCP,KAAhC,EAAuCM,QAAvC,CAAf;AACH,GAFD,CAGA,OAAMH,GAAN,EAAU;AACNK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH;;AAED,MAAGX,MAAH,EACI,OAAOA,MAAM,CAACK,IAAd,CADJ,KAGI,OAAO,IAAP;AACP,CAdM;AAgBP,OAAO,MAAMa,cAAc,GAAG,OAAMV,KAAN,EAAaM,QAAb,KAA0B;AACpD,MAAId,MAAJ;;AAEA,MAAG;AACCA,IAAAA,MAAM,GAAG,MAAMH,IAAI,CAACsB,8BAAL,CAAoCX,KAApC,EAA2CM,QAA3C,CAAf;AACA,UAAMb,SAAS,GAAG,MAAMF,mBAAmB,CAACC,MAAD,CAA3C,CAFD,CAIC;;AACA,QAAG,CAACC,SAAS,CAACQ,EAAd,EAAiB;AACb,YAAMZ,IAAI,CAACuB,WAAL,CAAiBC,MAAjB,EAAN;AACA,8BAAUpB,SAAS,CAACW,KAApB;AACH;AACJ,GATD,CAUA,OAAMD,GAAN,EAAU;AACNX,IAAAA,MAAM,GAAGW,GAAT;AACH;;AAED,SAAOX,MAAP;AACH,CAlBM","sourcesContent":["import {auth, firestore} from '../firebaseConfig'\n\nconst addUserToCollection = async(result) => {\n\n    let oDocument = {\n\n    }\n\n    try{\n        const document = await firestore.collection('users').doc(result.user.uid).set({\n            email: result.user.email\n        })\n\n        oDocument.ok = true\n        oDocument.data = document\n    }\n    catch(err){\n        oDocument.ok = false\n        oDocument.error = err\n    }\n    \n    return oDocument\n}\n\nexport const firebaseLogin = async(email, password) => {\n    let result\n\n    try{    \n        result = await auth.signInWithEmailAndPassword(email, password)\n    }\n    catch(err){\n        console.log(err)\n    }\n    \n    if(result)\n        return result.user\n    else\n        return null\n}\n\nexport const firebaseSignUp = async(email, password) => {\n    let result\n    \n    try{\n        result = await auth.createUserWithEmailAndPassword(email, password)\n        const oDocument = await addUserToCollection(result)\n\n        //if there's a problem saving user in users collection, then it is deleted\n        if(!oDocument.ok){\n            await auth.currentUser.delete()\n            throw {...oDocument.error}\n        }\n    }\n    catch(err){\n        result = err\n    }\n\n    return result\n}"]},"metadata":{},"sourceType":"module"}