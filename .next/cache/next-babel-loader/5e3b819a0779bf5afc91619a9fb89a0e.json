{"ast":null,"code":"import _defineProperty from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jubaan/Documents/online-form-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jubaan/Documents/online-form-builder/components/MapViewer/CityPin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nvar ICON = \"M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\\n  C20.1,15.8,20.2,15.8,20.2,15.7z\";\nvar pinStyle = {\n  cursor: 'pointer',\n  fill: '#d00',\n  stroke: 'none'\n};\n\nvar CityPin = /*#__PURE__*/function (_React$Component) {\n  _inherits(CityPin, _React$Component);\n\n  var _super = _createSuper(CityPin);\n\n  function CityPin() {\n    _classCallCheck(this, CityPin);\n\n    return _super.call(this);\n  }\n\n  _createClass(CityPin, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$size = _this$props.size,\n          size = _this$props$size === void 0 ? 20 : _this$props$size,\n          onClick = _this$props.onClick;\n\n      var handleClick = function handleClick(e) {\n        onClick();\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: size,\n        viewBox: \"0 0 24 24\",\n        style: _objectSpread(_objectSpread({}, pinStyle), {}, {\n          transform: \"translate(\".concat(-size / 2, \"px,\").concat(-size, \"px)\")\n        }),\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: ICON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CityPin;\n}(React.Component);\n\nexport { CityPin as default };","map":{"version":3,"sources":["/home/jubaan/Documents/online-form-builder/components/MapViewer/CityPin.js"],"names":["React","PureComponent","ICON","pinStyle","cursor","fill","stroke","CityPin","props","size","onClick","handleClick","e","transform","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AAEA,IAAMC,IAAI,4QAAV;AAIA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,SADO;AAEfC,EAAAA,IAAI,EAAE,MAFS;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAjB;;IAMqBC,O;;;;;AAEnB,qBAAa;AAAA;;AAAA;AAEZ;;;;6BAEQ;AAAA,wBACsB,KAAKC,KAD3B;AAAA,yCACAC,IADA;AAAA,UACAA,IADA,iCACO,EADP;AAAA,UACWC,OADX,eACWA,OADX;;AAGP,UAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AAEzBF,QAAAA,OAAO;AACR,OAHD;;AAKA,0BACE;AACE,QAAA,MAAM,EAAED,IADV;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,kCAAMN,QAAN;AAAgBU,UAAAA,SAAS,sBAAe,CAACJ,IAAD,GAAQ,CAAvB,gBAA8B,CAACA,IAA/B;AAAzB,UAHP;AAIE,QAAA,OAAO,EAAEE,WAJX;AAAA,+BAME;AAAM,UAAA,CAAC,EAAET;AAAT;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;;;EAxBkCF,KAAK,CAACc,S;;SAAtBP,O","sourcesContent":["import React, {PureComponent} from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  cursor: 'pointer',\n  fill: '#d00',\n  stroke: 'none'\n};\n\nexport default class CityPin extends React.Component {\n\n  constructor(){\n    super()\n  }\n\n  render() {\n    const {size = 20, onClick} = this.props;\n\n    const handleClick = (e) => {\n      \n      onClick()\n    }\n\n    return (\n      <svg \n        height={size}\n        viewBox=\"0 0 24 24\"\n        style={{...pinStyle, transform: `translate(${-size / 2}px,${-size}px)`}}\n        onClick={handleClick}\n      >\n        <path d={ICON}/>\n      </svg>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}